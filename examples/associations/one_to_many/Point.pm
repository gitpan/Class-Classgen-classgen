# --- Generated by classgen 3.03 on Fre Dez 29 21:56:41 MET 2000 ---

$VERSION=1.00;
	package Point;
;
	require 'Point_gs.pm';

sub new {
	my ($self) = @_;

	# instance-variables:
	my $x;	# coordinate
	my $y;	# coordinate
	my $a_belongs_to;	# a 'belong to' association

	$self=bless {
		_x		=>	$x,
		_y		=>	$y,
		_a_belongs_to		=>	$a_belongs_to,
	}, ref($self)||$self;
	#$self->inherit_from($self->your_base::new());	# adapt when inheriting
	return $self;
}

# --- methods specific for this class ---------------------

sub specific {
	my ($self) = @_;
}

# --- inheritance methode -----------------------------------

sub inherit_from {
	my ($self, $base_blessed) = @_;
	my @l = keys %$base_blessed;
	foreach (@l) {
		$self->{$_} = $base_blessed->{$_};
	}
}

1;

__END__


=head1 NAME 

Point - A simple demo for a one-to-many association (/examples).

=head1 VERSION

1.00

=head1 SYNOPSIS

=head1 DESCRIPTION

Points will be used by Polygons. Point-instances can retrieve their
bolonging Polygon-instance via the $a_belongs_to internal variable. They can
even start functions of the Polygon-class via this association.

=head1 ENVIRONMENT

=head1 DIAGNOSTICS

=head1 BUGS

=head1 FILES

=head1 SEE ALSO

	perldoc classgen
	perldoc many
	perldoc Polygon

=head1 AUTHOR

Name:  Michael Schlueter 

email: mschlue@cpan.org

=head1 COPYRIGHT

Copyright (c) 2000, Michael Schlueter. All Rights Reserved.
This module is free software. It may be used, redistributed
and/or modified under the same terms as Perl itself.
